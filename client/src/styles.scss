@use '~@angular/material' as mat;
@import '~@angular/material/theming';
@include mat.core();

//     stylesheet           Theme          P               A         W
// deeppurple-amber.css 	Light   	deep-purple,    amber,      red
// indigo-pink.css 	        Light 	    indigo,         pink,       red
// pink-bluegrey.css 	    Dark 	    pink,           bluegrey,   red
// purple-green.css 	    Dark 	    purple,         green,      red

$light-primary: mat.define-palette(mat.$deep-purple-palette, 500, 100, 900);
$light-accent: mat.define-palette(mat.$teal-palette, 500, 100, 900);
$light-warn: mat.define-palette(mat.$red-palette);

$light-theme: mat.define-light-theme(
    (
        color: (
            primary: $light-primary,
            accent: $light-accent,
            warn: $light-warn,
        ),
    )
);

.light-theme {
    @include mat.all-component-themes($light-theme);

    $primary: mat-color($light-primary);
    $accent: mat-color($light-accent);
    $warn: mat-color($light-warn);
    $fg_palette: map-get($light-theme, foreground);
    $bg_palette: map-get($light-theme, background);
    $fg: map-get($fg_palette, text);
    $bg: map-get($bg_palette, background);

    --primary: #{$primary};
    --accent: #{$accent};
    --warn: #{$warn};
    --fg: #{$fg};
    --bg: #{$bg};

    .accent-color {
        color: mat-color($light-accent) !important;
    }
    
    .primary-color {
        color: mat-color($light-primary) !important;
    }
}


$dark-primary: mat.define-palette(mat.$purple-palette, 500, 100, 900);
$dark-accent: mat.define-palette(mat.$blue-palette, 500, 100, 900);
$dark-warn: mat.define-palette(mat.$red-palette);

$dark-theme: mat.define-dark-theme(
    (
        color: (
            primary: $dark-primary,
            accent: $dark-accent,
            warn: $dark-warn,
        ),
    )
);

.dark-theme {
    @include mat.all-component-themes($dark-theme);

    $primary: mat-color($dark-primary);
    $accent: mat-color($dark-accent);
    $warn: mat-color($dark-warn);
    $fg_palette: map-get($dark-theme, foreground);
    $bg_palette: map-get($dark-theme, background);
    $fg: map-get($fg_palette, text);
    $bg: map-get($bg_palette, background);

    --primary: #{$primary};
    --accent: #{$accent};
    --warn: #{$warn};
    --fg: #{$fg};
    --bg: #{$bg};

    .accent-color {
        color: mat-color($dark-accent) !important;
    }

    .primary-color {
        color: mat-color($dark-primary) !important;
    }
    

}



// TODO GL3A22107-104
:root {
    --lightblue: rgb(152, 222, 255);
    --darkgray: rgb(119, 119, 119);
    --brown: rgb(129, 82, 63);

    // Board color
    --blue-munsell: rgb(50, 87, 187);
    --melon: rgb(248, 142, 142);
    --salmon: rgb(209, 0, 45);
    --powder-blue: rgb(120, 209, 221);
    --brown-choco: rgb(66, 56, 52);
    --bone: rgb(240, 231, 216, 1);

    // Page
    --black-chocolate: rgba(20, 16, 9, 1);
    --lightgray: rgb(209, 209, 209, 0.9);
    --white: rgb(255, 255, 255);
    --red: rgb(153, 1, 1);
    --active: rgba(0, 217, 255, 0.76);
}

html,
body {
    height: 100%;
}
body {
    margin: 0;
    font-family: Roboto, 'Helvetica Neue', sans-serif;
    // TODO GL3A22107-104
    background: #20262c;
}

.disable-select {
    user-select: none; /* supported by Chrome and Opera */
    -webkit-user-select: none; /* Safari */
    -khtml-user-select: none; /* Konqueror HTML */
    -moz-user-select: none; /* Firefox */
    -ms-user-select: none; /* Internet Explorer/Edge */
}

mat-card {
    opacity: 0.95;
}

h1 {
    @extend .disable-select;
    display: flex;
    justify-content: center;
    margin-bottom: 0px !important;
}

h2 {
    @extend .disable-select;
    margin-bottom: 0px !important;
    display: flex;
    justify-content: center;
}

// Font
@font-face {
    font-family: overpass;
    src: url('https://fonts.googleapis.com/css2?family=Overpass&display=swap') format('opentype');
}

body,
html {
    height: 100%;
    margin: 0;
}
